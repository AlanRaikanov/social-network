basePath: /api
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    type: object
  models.LoginResponse:
    properties:
      accessToken:
        type: string
      email:
        type: string
      refreshToken:
        type: string
      user:
        type: string
    type: object
  models.RefreshToken:
    properties:
      accessToken:
        type: string
      message:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Auth API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token.
      parameters:
      - description: User credentials
        in: body
        name: UserCred
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User Login
      tags:
      - Authentication
  /refresh:
    get:
      description: Refreshes the access token using the refresh token cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            $ref: '#/definitions/models.RefreshToken'
        "401":
          description: Unauthorized - Refresh token is missing or invalid
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to create new access token
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Refresh Access Token
      tags:
      - Authentication
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
